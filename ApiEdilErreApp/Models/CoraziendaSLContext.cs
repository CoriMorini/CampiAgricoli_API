// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ApiEdilErreApp.Models;

public partial class CoraziendaSLContext : DbContext
{
    public CoraziendaSLContext()
    {
    }

    public CoraziendaSLContext(DbContextOptions<CoraziendaSLContext> options)
        : base(options)
    {
    }

    public virtual DbSet<APPVistaSlot> APPVistaSlot { get; set; }

    public virtual DbSet<APPVistaSlotAutomezzi> APPVistaSlotAutomezzi { get; set; }

    public virtual DbSet<TabAPP_Automezzi> TabAPP_Automezzi { get; set; }

    public virtual DbSet<TabAPP_Operatori> TabAPP_Operatori { get; set; }

    public virtual DbSet<TabAPP_Parametri> TabAPP_Parametri { get; set; }

    public virtual DbSet<TabAPP_Slots> TabAPP_Slots { get; set; }

    public virtual DbSet<TabAPP_TipoSlot> TabAPP_TipoSlot { get; set; }

    public virtual DbSet<TabAutoMezzi> TabAutoMezzi { get; set; }

    public virtual DbSet<TabCantieri> TabCantieri { get; set; }

    public virtual DbSet<TabCantieriFasi> TabCantieriFasi { get; set; }

    public virtual DbSet<TabCantieriMacroFasi> TabCantieriMacroFasi { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=192.168.1.221,1433;Initial Catalog=CoraziendaSL;Persist Security Info=True;User ID=sa;Password=rootBase100;Encrypt=True;TrustServerCertificate=true;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<APPVistaSlot>(entity =>
        {
            entity.ToView("APPVistaSlot");
        });

        modelBuilder.Entity<APPVistaSlotAutomezzi>(entity =>
        {
            entity.ToView("APPVistaSlotAutomezzi");
        });

        modelBuilder.Entity<TabAPP_Slots>(entity =>
        {
            entity.HasKey(e => e.APP_IdSlot).HasName("PK_TabAPP_Slot");
        });

        modelBuilder.Entity<TabAutoMezzi>(entity =>
        {
            entity.HasKey(e => e.IdAutoMezzo).HasName("PK_MEZZI");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}